RVI
~~~

\\ Limited RVI
\\ Display 0,2,4,6 scanline offset for 2 scanlines.
\\ <--- 102c total w/ 80c visible and hsync at 98c ---> <2c> ..13x <2c> = 128c
\\ Plus one extra for luck! (i.e. we wait for 13 but C9 counts 14 in total.)
\\ R9 = 13 + current - next
\\
\\  Assumes R4=0, i.e. one row per CRTC cycle.
\\  Scanline 0 has normal R0 width 128c.
\\  Must set R9 before final scanline to 13 + current - next. eg. R9 = 13 + 0 - 2 = 11
\\  Set scanline 1 to have width 102c.
\\  At 102c set R0 width to 2c and skip remaining 26c.
\\  At 0c reset R0 width to 128c.
\\
\\ Select CRTC register 0, i.e. lda #0:sta &fe00
\\
\\ cycles -->  94   96   98   100  102  104  106  108  110  112  114  116  118  120  122  124  126  0
\\             lda..sta............WAIT_CYCLES 18 ..............................lda..sta ...........|
\\             #1   &fe01                                                       #127 &fe01
\\ scanline 1            ^         2    3    4    5    6    7    8    9    10   11   xx   0    1    2
\\                       hpos                                                        |
\\                                               --> missed due to end of CRTC cycle +
\\
\\ For limited jump RVI with LHS blanking.
\\ Display 0,2,4 scanline offset for 2 scanlines.
\\ (Or rather no jump > 4 scanlines distance between subsequent cycles.)
\\  Set R9 before final scanline to 9 + current - next. eg. R9 = 9 + 0 - 0 = 9
\\
\\ cycles -->       96   98   100  102  104  106  108  110  112  114  116  118  120  122  124  126  0
\\                  lda..sta............lda..WAIT_CYCLES 10 ..........stz............sta ...........|
\\                  #1   &fe01          #127                          &fe01          &fe01
\\ scanline 1            ^              2    3    4    5    6    7    8    9    xx   ?    ?    ?    0
\\                       hpos                                                   |    |
\\                                          --> missed due to end of CRTC cycle +    + scanline counter prevented from updating whilst R0=0!
\\
\\ Full RVI.
\\  Assumes R4=0, i.e. one row per CRTC cycle.
\\  Displayed scanline width is 96c => hpos has to be set R2=95 or less.
\\  Set R9 = 15 + current - next.
\\  Set R0=1 (2c) at HCC=96 and skip 15x 2c scanlines (plus the secret one).
\\  Set R0=95 (96c) at HCC=0 for the next line.
\\
\\ Eg. current = 5, next = 1
\\  Assume R0=95 from start of line.
\\  Assume R2=95 or less for hpos.
\\  Assume R9 already set R9 = 15 + 5 - 1 = 19
\\  Assume CRTC register 0 selected, i.e. lda #0:sta &fe00
\\
\\ cycles -->  88   90   92   94   96   98   100  102  104  106  108  110  112  114  116  118  120  122  124  126  0
\\             lda..sta............NOP..NOP..NOP..NOP..NOP..NOP..NOP..NOP..NOP..NOP..NOP..NOP..lda..sta............|
\\             #1   &fe01                                                                      #95  &fe01
\\ scanline 5                      6    7    8    9    10   11   12   13   14   15   16   17   18   19   xx   0    1
\\                               ^                                                                        |
\\                               hpos                                 --> missed due to end of CRTC cycle +
\\
\\ NB. There is no additional scanline if this is not the end of the CRTC cycle.


RTW's version of RVI:

;     enable            disable hsync=101
;        v                 v       v
;  +-----------------------+ R1=86 
;   0    6            80   86        106 108 110 112 114 116 118 120 122 124 126 128 
; |                                    
; | next scanline 0: R0=115 R9=1                        | 0   1   X   0   1   X   (0...)
; | next scanline 2: R0=113 R9=3                    | 0   1   2   3   X   0   1   (2...)
; | next scanline 4: R0=119 R9=5                                | 0   1   2   3   (4...)
; | next scanline 6: R0=115 R9=7                        | 0   1   2   3   4   5   (6...)

